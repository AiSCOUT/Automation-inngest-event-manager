name: Build and Push Docker Image to ECR and Update Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-2
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # Set as a secret in GitHub
      ECR_REPOSITORY_NAME: inngest
      LAMBDA_FUNCTION_NAME: inngest

      # AWS Secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GH_ACCESS_TOKEN: ${{ secrets.GH_PRIVATE_ACCESS_TOKEN }}

    steps:
      # Setup .netrc for GitHub authentication
      - name: Setup .netrc for GitHub authentication
        run: |
          echo "machine github.com" >> ~/.netrc
          echo "login $GH_ACCESS_TOKEN" >> ~/.netrc
          echo "password x-oauth-basic" >> ~/.netrc

      # Checkout code from GitHub
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Configure AWS credentials for the entire session (ECR login will use these)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to AWS ECR using the configured AWS credentials
      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME }}

      # Build, tag, and push Docker image to ECR
      - name: Build, tag, and push Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ env.ECR_REPOSITORY_NAME }} .
          docker tag ${{ env.ECR_REPOSITORY_NAME }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME }}:latest

      # Update Lambda function with the new image
      - name: Update Lambda function with new image
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME }}:latest
